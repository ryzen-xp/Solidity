// CC  credit to code eater youtube channel 
// SPDX-License-Identifier: GPL-3.0

pragma solidity >=0.5.0 <0.9.0;


contract Lottery{
    address private manager ;
    address payable[] public participent;

    constructor() {
        manager=msg.sender;
    }

    receive() external payable{
        require(msg.value==2 ether );
        participent.push(payable(msg.sender));
        
    }
     function  getBalance() public view returns (uint ){
         require(msg.sender== manager);
         return address(this).balance;

     } 
     function random() public view returns (uint ){
         return uint(keccak256(abi.encodePacked(block.difficulty,block.timestamp,participent.length)));
     }
     function Lotterywinner()public 
     {
         require(msg.sender== manager);
         require(participent.length>=3);
         uint r=random();
         address payable winner;
         uint index =r%participent.length;
         winner=participent[index];
         winner.transfer(getBalance());
         participent= new address payable[](0);

     }
}
